name: "0Chain Nightly Tests - Current Sprint"
concurrency:
  group: "sprint-nightly-tests-${{ github.ref }}-${{ github.event_name }}"
  cancel-in-progress: true
on:
  schedule:
    # Runs every morning at 4am UTC
    - cron: '0 4 * * *'
  workflow_dispatch:

jobs:
  system-tests:
    name: "System Tests"
    runs-on: [ tests-suite ]
    steps:
      - name: "Config: Deploy new 0Chain network then run tests against it"
        run: |
          echo "NETWORK_URL=$(echo dev-${RUNNER_NAME:(-1)}.devnet-0chain.net)" >> $GITHUB_ENV
          echo "REPO_SNAPSHOTS_BRANCH=current-sprint" >> $GITHUB_ENV
          echo "RUNNER_NUMBER=${RUNNER_NAME:(-1)}" >> $GITHUB_ENV

      - name: 'Setup jq'
        uses: dcarbone/install-jq-action@v2.1.0
        with:
          version: '1.7'
          force: 'false'

      - name: "Create Tenderly virtual testnet"
        run: |
          echo "TENDERLY_CREATION_INFO=$(curl -X POST \
           -H "x-access-key: ${{ secrets.TENDERLY_SECRET }}" \
           -H "Content-Type: application/json" \
           -d '{"slug":"mainnet-dev-${{ env.RUNNER_NUMBER }}-${{ github.run_id }}","displayName":"mainnet-dev-${{ env.RUNNER_NUMBER }}-${{ github.run_id }}","description":"","visibility":"TEAM","tags":{"purpose":"development"},"networkConfig":{"networkId":"1","blockNumber":"18539777","chainConfig":{"chainId":"1"},"baseFeePerGas":"1"},"explorerConfig":{"enabled":false,"verificationVisibility":"bytecode"},"syncState":false}' \
           https://api.tenderly.co/api/v1/account/zus_network/project/project/testnet/container)" >> $GITHUB_ENV

      - name: "Parse Tenderly virtual testnet creation transaction result"
        run: |
          echo "TENDERLY_VIRTUAL_TESTNET_ID=$(echo '${{ env.TENDERLY_CREATION_INFO }}' | jq -r '.container.id')" >> $GITHUB_ENV

      - name: "Transfer Bridge ownership in Tenderly fork"
        run: |
          curl -X POST \
              -H "x-access-key: ${{ secrets.TENDERLY_SECRET }}" \
              -H "Content-Type: application/json" \
              -d '{
                "network_id": "1",
                "transaction_index": null,
                "from": "0xed8f3170db6d1a71c8fa6d8d73cc2c51db95d5a4",
                "input": "0xf2fde38b0000000000000000000000008e25cfd9bd6c0ca67a5522cd920b3c66d39d6e97",
                "to": "0x7700d773022b19622095118fadf46f7b9448be9b",
                "gas": 8000000,
                "gas_price": "0",
                "value": "0",
                "access_list": [],
                "generate_access_list": true,
                "source": "dashboard",
                "skip_fork_head_update": false,
                "alias": "",
                "description": "Transfer ownership to 0x8E25cfd9bd6c0ca67a5522cd920b3c66D39d6E97"
            }' \
              https://api.tenderly.co/api/v1/account/zus_network/project/project/testnet/${{ env.TENDERLY_VIRTUAL_TESTNET_ID }}/transactions

      - name: "Transfer Authorizers ownership in Tenderly fork"
        run: |
          curl -X POST \
              -H "x-access-key: ${{ secrets.TENDERLY_SECRET }}" \
              -H "Content-Type: application/json" \
              -d '{
                "network_id": "1",
                "transaction_index": null,
                "from": "0xed8f3170db6d1a71c8fa6d8d73cc2c51db95d5a4",
                "input": "0xf2fde38b0000000000000000000000008e25cfd9bd6c0ca67a5522cd920b3c66d39d6e97",
                "to": "0x481dab4407b9880de0a68dc62e6af611c4949e42",
                "gas": 8000000,
                "gas_price": "0",
                "value": "0",
                "access_list": [],
                "generate_access_list": true,
                "source": "dashboard",
                "skip_fork_head_update": false,
                "alias": "",
                "description": "Transfer ownership to 0x8E25cfd9bd6c0ca67a5522cd920b3c66D39d6E97"
            }' \
              https://api.tenderly.co/api/v1/account/zus_network/project/project/testnet/${{ env.TENDERLY_VIRTUAL_TESTNET_ID }}/transactions

      - name: "Deploy 0Chain"
        uses: 0chain/actions/deploy-0chain@master
        with:
          repo_snapshots_branch: "${{ env.REPO_SNAPSHOTS_BRANCH }}"
          kube_config: ${{ secrets[format('DEV{0}KC', env.RUNNER_NUMBER)] }}
          teardown_condition: "TESTS_PASSED"
          SUBGRAPH_API_URL: ${{ secrets.SUBGRAPH_API_URL }}
          TENDERLY_VIRTUAL_TESTNET_ID: ${{ env.TENDERLY_VIRTUAL_TESTNET_ID }}
          graphnode_sc: ${{ secrets.GRAPHNODE_SC }}
          graphnode_network: ${{ secrets.GRAPHNODE_NETWORK }}
          graphnode_ethereum_node_url: https://virtual.mainnet.rpc.tenderly.co/${{ env.TENDERLY_VIRTUAL_TESTNET_ID }}
          svc_account_secret: ${{ secrets.SVC_ACCOUNT_SECRET }}

      - name: "Run System tests"
        uses: 0chain/actions/run-system-tests@master
        with:
          repo_snapshots_branch: "${{ env.REPO_SNAPSHOTS_BRANCH }}"
          network: ${{ env.NETWORK_URL }}
          svc_account_secret: ${{ secrets.SVC_ACCOUNT_SECRET }}
          deploy_report_page: true
          archive_results: true
          run_flaky_tests: true
          run_api_system_tests: true
          run_cli_system_tests: true
          run_tokenomics_system_tests: false
          run_smoke_tests: false
          test_file_filter: ${{ env.TEST_FILE_FILTER }}
          TENDERLY_VIRTUAL_TESTNET_ID: ${{ env.TENDERLY_VIRTUAL_TESTNET_ID }}
          S3_ACCESS_KEY: ${{ secrets.S3_ACCESS_KEY }}
          S3_SECRET_KEY: ${{ secrets.S3_SECRET_KEY }}

      - name: "Remove Tenderly virtual testnet"
        if: always()
        run: |
          curl -X DELETE \
            -H "x-access-key: ${{ secrets.TENDERLY_SECRET }}" \
            -H "Content-Type: application/json" \
            https://api.tenderly.co/api/v1/account/zus_network/project/project/testnet/container/${{ env.TENDERLY_VIRTUAL_TESTNET_ID }}

      - name: "Check if should send slack notification"
        if: failure()
        id: send-slack-notification
        uses: peter-murray/value-as-flag-action@0.0.1
        with:
          value: ${{ secrets.DEVOPS_CHANNEL_WEBHOOK_URL }}
          default: false

  notify_slack_on_failure:
    runs-on: [self-hosted, arc-runner]
    needs: [system-tests]
    if: always() && (needs.system-tests.result == 'failure')
    steps:
      - name: "Notify Slack"
        run: |
          payload='{
          "text": "'"<!here> 0Chain Nightly Tests - Current Sprint FAILED on $(echo ${GITHUB_REF#refs/heads/})!.\n View the test results on Github: https://github.com/0chain/system_test/actions/runs/${{ github.run_id }}"'",
          "attachments": [
              {
              "text": "0Chain Nightly Tests - Current Sprint FAILED ⚠️",
              "color": "#ff0000"
              }
          ]
          }'
          curl -X POST -H 'Content-type: application/json' --data "${payload}" ${{ secrets.DEVOPS_CHANNEL_WEBHOOK_URL }}
          
  notify_slack_on_success:
    runs-on: [self-hosted, arc-runner]
    needs: [system-tests]
    if: always() && (needs.system-tests.result == 'success')
    steps:
      - name: "Notify Slack"
        run: |
          payload='{
          "text": "'"<!here> 0Chain Nightly Tests - Current Sprint PASSING on $(echo ${GITHUB_REF#refs/heads/})!.\n View the test results on Github: https://github.com/0chain/system_test/actions/runs/${{ github.run_id }}"'",
          "attachments": [
              {
              "text": "0Chain Nightly Tests - Current Sprint PASSED ✅",
              "color": "#22bb33"
              }
          ]
          }'
          curl -X POST -H 'Content-type: application/json' --data "${payload}" ${{ secrets.DEVOPS_CHANNEL_WEBHOOK_URL }}
