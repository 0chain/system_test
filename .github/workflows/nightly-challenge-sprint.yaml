name: "Challenge Protocol Nightly Tests - Sprint"
concurrency:
  group: "challenge-nightly-tests-${{ github.ref }}-${{ github.event_name }}"
  cancel-in-progress: true
on:
  schedule:
    # Runs every morning at 2am UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  system-tests:
    name: "Challenge System Tests"
    runs-on: [ tests-suite ]
    steps:
      - name: "Config: Deploy new 0Chain network then run challenge tests against it"
        run: |
          echo "NETWORK_URL=$(echo dev-${RUNNER_NAME:(-1)}.devnet-0chain.net)" >> $GITHUB_ENV
          echo "REPO_SNAPSHOTS_BRANCH=current-sprint" >> $GITHUB_ENV
          echo "RUNNER_NUMBER=${RUNNER_NAME:(-1)}" >> $GITHUB_ENV

      - name: "Deploy 0Chain"
        uses: 0chain/actions/deploy-0chain@fix/challenge-based-on-weight
        with:
          repo_snapshots_branch: fix/challenge-based-on-weight
          kube_config: ${{ secrets[format('DEV{0}KC', env.RUNNER_NUMBER)] }}
          teardown_condition: "TESTS_PASSED"
          SUBGRAPH_API_URL: ${{ secrets.SUBGRAPH_API_URL }}
          TENDERLY_FORK_ID: ${{ secrets.TENDERLY_FORK_ID }}
          graphnode_sc: ${{ secrets.GRAPHNODE_SC }}
          graphnode_network: ${{ secrets.GRAPHNODE_NETWORK }}
          graphnode_ethereum_node_url: https://rpc.tenderly.co/fork/${{ secrets.TENDERLY_FORK_ID }}
          svc_account_secret: ${{ secrets.SVC_ACCOUNT_SECRET }}

      - name: "Run Challenge System tests"
        uses: 0chain/actions/run-system-tests@fix/challenge-based-on-weight
        with:
          system_tests_branch: ${{ env.CURRENT_BRANCH }}
          repo_snapshots_branch: fix/challenge-based-on-weight
          network: ${{ env.NETWORK_URL }}
          svc_account_secret: ${{ secrets.SVC_ACCOUNT_SECRET }}
          deploy_report_page: true
          archive_results: true
          run_flaky_tests: false
          run_api_system_tests: false
          run_cli_system_tests: false
          run_tokenomics_system_tests: false
          run_smoke_tests: false
          run_s3mgrt_system_tests: false
          run_challenge_system_tests: true
          test_file_filter: ${{ env.TEST_FILE_FILTER }}
          TENDERLY_FORK_ID: ${{ secrets.TENDERLY_FORK_ID }}
          S3_ACCESS_KEY: ${{ secrets.S3_ACCESS_KEY }}
          S3_SECRET_KEY: ${{ secrets.S3_SECRET_KEY }}