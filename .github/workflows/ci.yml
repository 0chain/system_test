name: "0Chain System Tests CI"

on:
  workflow_dispatch:
    inputs:
      network:
        description: 'network'
        default: 'dev.0chain.net'
        required: true
      zbox_branch:
        description: 'zbox branch'
        default: 'staging'
        required: true
      zwallet_branch:
        description: 'zwallet branch'
        default: 'staging'
        required: true

  push:
env:
  NETWORK: dev.0chain.net
  ZWALLET_BRANCH: staging
  ZBOX_BRANCH: staging

jobs:
  golangci:
    name: "lint"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.42

  system-tests:
    name: "System Tests"
    runs-on: [self-hosted, tests-suite]
    timeout-minutes: 20
    steps:
      - name: "Use params from user input"
        if: github.event_name == 'workflow_dispatch'
        run: |
          echo "NETWORK=$(echo ${{github.event.inputs.network}})" >> $GITHUB_ENV
          echo "ZBOX_BRANCH=$(echo ${{github.event.inputs.zbox_branch}})" >> $GITHUB_ENV
          echo "ZWALLET_BRANCH=$(echo ${{github.event.inputs.zwallet_branch}})" >> $GITHUB_ENV

      - name: "Force Install GIT latest"
        run: |
          apt-get install -y software-properties-common \
          && apt-get update \
          && add-apt-repository -y ppa:git-core/ppa \
          && apt-get update \
          && apt-get install -y git

      - name: "Checkout system tests"
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: "Get CLI Cache Key"
        run: |
          echo ZWALLET_SHA=$(curl --silent https://api.github.com/repos/0chain/zwalletcli/git/refs/heads/${{ env.ZWALLET_BRANCH }}  | jq --raw-output .object.sha) >> $GITHUB_ENV
          echo ZBOX_SHA=$(curl --silent https://api.github.com/repos/0chain/zboxcli/git/refs/heads/${{ env.ZBOX_BRANCH }}  | jq --raw-output .object.sha) >> $GITHUB_ENV

      - name: "Cache CLI Binaries"
        id: cli-cache
        uses: actions/cache@v2
        with:
          path: |
            tests/cli_tests/zbox
            tests/cli_tests/zwallet
          key: cli-cache-${{ runner.os }}-${{ env.ZWALLET_SHA }}-${{ env.ZBOX_SHA }}

      - name: "Checkout 0wallet CLI"
        if: steps.cli-cache.outputs.cache-hit != 'true'
        uses: actions/checkout@v2
        with:
          ref: ${{ env.ZWALLET_BRANCH }}
          repository: 0chain/zwalletcli
          fetch-depth: 1
          path: ./zwalletcli

      - name: "Checkout 0box CLI"
        if: steps.cli-cache.outputs.cache-hit != 'true'
        uses: actions/checkout@v2
        with:
          ref: ${{ env.ZBOX_BRANCH }}
          repository: 0chain/zboxcli
          fetch-depth: 1
          path: ./zboxcli

      - name: "Setup Go"
        uses: actions/setup-go@v2
        with:
          go-version: 1.16

      - name: "Build CLI Binaries"
        if: steps.cli-cache.outputs.cache-hit != 'true'
        run: |
          cd zwalletcli
          make install
          mv zwallet ../tests/cli_tests
          cd ../zboxcli
          make install
          mv zbox ../tests/cli_tests

      - name: "Get Time"
        id: time
        uses: nanzm/get-time-action@v1.1
        with:
          format: YYYY-MM-DD_HH.mm.ss

      - name: "Set up system tests"
        run: |
          echo "BRANCH=$(echo ${GITHUB_REF#refs/heads/} | sed 's/\//_/g')" >> $GITHUB_ENV
          go get gotest.tools/gotestsum
          go get github.com/vakenbolt/go-test-report
          cd tests/cli_tests
          mkdir -p $(echo ${GITHUB_REF#refs/heads/} | sed 's/\//_/g')/${GITHUB_SHA}
          sed "s,block_worker:.*,block_worker: https://${{ env.NETWORK }}/dns," -i ./config/zbox_config.yaml
          (./zwallet version --configDir ./config --config ./zbox_config.yaml --wallet ../ignore --silent | grep -A2 'Version info' | sed "s/Version info:/ZWallet Version Info:/") || true
          (./zbox version --configDir ./config --config ./zbox_config.yaml --wallet ../ignore --silent | grep -A2 'Version info' | sed "s/Version info:/ZBox Version Info:/") || true
          printf '#!/bin/bash\nset -o pipefail\nCONFIG_PATH=./zbox_config.yaml go test ./... -json -count=1 | sed -r "/(=== (CONT|RUN|PAUSE).*)|(--- FAIL:.*)|(\\"Test\\":\\".*\/[pP]arallel\\")/d"' > TEST_RUNNER_COMMAND.sh && chmod 777 TEST_RUNNER_COMMAND.sh

      - name: "Run CLI System Tests"
        shell: 'script --return --quiet --command "bash {0}"'
        run: |
          cd tests/cli_tests
          exit_code=0
          ~/go/bin/gotestsum --jsonfile test-output.json --hide-summary=output --format testname --raw-command -- ./TEST_RUNNER_COMMAND.sh || exit_code=$?
          cat test-output.json | ~/go/bin/go-test-report --groupSize 1 --output ${{ env.BRANCH }}/${GITHUB_SHA}/index.html --title "0Chain System test suite [${{ env.BRANCH }}/${GITHUB_SHA:0:8}] ran against [${{ env.NETWORK }}] at [${{ steps.time.outputs.time }}]"
          cp -R ./${{ env.BRANCH }}/${GITHUB_SHA} ./${{ env.BRANCH }}/latest
          exit $exit_code

      - name: "Deploy report page"
        if: always()
        uses: peaceiris/actions-gh-pages@v3
        with:
          publish_branch: test_reports
          keep_files: true
          github_token: "${{ secrets.SVC_ACCOUNT_SECRET }}"
          publish_dir: "./tests/cli_tests/${{ env.BRANCH }}"
          destination_dir: "./${{ env.BRANCH }}"
          user_name: "github-actions[bot]"
          user_email: "github-actions[bot]@users.noreply.github.com"

      - name: "Archive CLI Config & Console Output"
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: System-Test-${{ steps.time.outputs.time }}
          path: |
            ./tests/cli_tests/config
            ./tests/cli_tests/cmdlog.log
            ./tests/cli_tests/${{ env.BRANCH }}/${GITHUB_SHA}/index.html

      - name: "Wait for report deployment to complete"
        if: always()
        run: counter=0; while [ $counter -lt 5 ] && curl -o /dev/null -Isw '%{http_code}\n' "https://0chain.github.io/system_test/${{ env.BRANCH }}/${GITHUB_SHA}/index.html?t=$(date +%s)" | grep -v 200 > /dev/null; do sleep 10 && echo "Waiting for report page to deploy..." && ((counter=counter+1)); done

      - name: "Report Link"
        if: always()
        run: echo "https://0chain.github.io/system_test/${{ env.BRANCH }}/${GITHUB_SHA}/index.html"
