name: ci

on:
  workflow_dispatch:
    name: test
    inputs:
      network:
        description: 'which network you want to test'
        default: 'dev.0chain.net'
        required: true
      zbox_branch:
        description: 'which branch(zbox) you want to test'
        default: 'staging'
        required: true
      zwallet_branch:
        description: 'which branch(zwallet) you want to test'
        default: 'staging'
        required: true

  push:
env:
  NETWORK: dev.0chain.net
  ZWALLET_BRANCH: staging
  ZBOX_BRANCH: staging 

jobs:
  system-tests:
    name: System Tests
    runs-on: [self-hosted, tests-suite]
    timeout-minutes: 20
    steps:
      - name: Set environment variables
        if: ${{ github.event_name }} == 'test'
        run: |
            echo "NETWORK=$(echo ${github.event.inputs.network})" >> $GITHUB_ENV
            echo "ZWALLET_BRANCH=$(echo ${github.event.inputs.zbox_branch})" >> $GITHUB_ENV
            echo "ZBOX_BRANCH=$(echo ${github.event.inputs.zwallet_branch})" >> $GITHUB_ENV


      - name: "Checkout system tests"
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: "Get CLI Cache Key"
        run: |
          echo ZWALLET_SHA=$(curl --silent https://api.github.com/repos/0chain/zwalletcli/git/refs/heads/${{ env.ZWALLET_BRANCH }}  | jq --raw-output .object.sha) >> $GITHUB_ENV
          echo ZBOX_SHA=$(curl --silent https://api.github.com/repos/0chain/zboxcli/git/refs/heads/${{ env.ZBOX_BRANCH }}  | jq --raw-output .object.sha) >> $GITHUB_ENV
      - name: "Cache CLI Binaries"
        id: cli-cache
        uses: actions/cache@v2
        with:
          path: |
            tests/cli_tests/zbox
            tests/cli_tests/zwallet
          key: cli-cache-${{ runner.os }}-${{ env.ZWALLET_SHA }}-${{ env.ZBOX_SHA }}
      - name: "Checkout 0wallet CLI"
        if: steps.cli-cache.outputs.cache-hit != 'true'
        uses: actions/checkout@v2
        with:
          ref: ${{ env.ZWALLET_BRANCH }}
          repository: 0chain/zwalletcli
          fetch-depth: 1
          path: ./zwalletcli
      - name: "Checkout 0box CLI"
        if: steps.cli-cache.outputs.cache-hit != 'true'
        uses: actions/checkout@v2
        with:
          ref: ${{ env.ZBOX_BRANCH }}
          repository: 0chain/zboxcli
          fetch-depth: 1
          path: ./zboxcli
      - name: "Setup Go"
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
#      - name: "Cache Go Dependencies" -> This is required on github hosted agents but not on self hosted as go deps are already being present in the base image
#        uses: actions/cache@v2
#        with:
#          path: ~/go/pkg/mod
#          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
#          restore-keys: |
#            ${{ runner.os }}-go-
      - name: "Build CLI Binaries"
        if: steps.cli-cache.outputs.cache-hit != 'true'
        run: |
          cd zwalletcli
          make install
          mv zwallet ../tests/cli_tests
          cd ../zboxcli
          make install
          mv zbox ../tests/cli_tests
      - name: "Get Time"
        id: time
        uses: nanzm/get-time-action@v1.1
        with:
          format: YYYY-MM-DD_HH.mm.ss
      - name: "Run CLI System Tests"
        shell: 'script --return --quiet --command "bash {0}"'
        run: |
          go get gotest.tools/gotestsum
          cd tests/cli_tests
          sed "s,block_worker:.*,block_worker: https://${{ env.NETWORK }}/dns," -i ./config/zbox_config.yaml
          (./zwallet version --configDir ./config --config ./zbox_config.yaml --wallet ../ignore --silent | grep -A2 'Version info' | sed "s/Version info:/ZWallet Version Info:/") || true
          (./zbox version --configDir ./config --config ./zbox_config.yaml --wallet ../ignore --silent | grep -A2 'Version info' | sed "s/Version info:/ZBox Version Info:/") || true
          printf '#!/bin/bash\nset -o pipefail\nCONFIG_PATH=./zbox_config.yaml go test ./... -json -count=1 | sed -r "/(=== (CONT|RUN|PAUSE).*)|(--- FAIL:.*)/d\n"' > TEST_RUNNER_COMMAND.sh && chmod 777 TEST_RUNNER_COMMAND.sh
          ~/go/bin/gotestsum --format testname --raw-command -- ./TEST_RUNNER_COMMAND.sh
      - name: "Archive CLI Config & Console Output"
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: System-Test-${{ steps.time.outputs.time }}
          path: |
            ./tests/cli_tests/config
            ./tests/cli_tests/cmdlog.log
