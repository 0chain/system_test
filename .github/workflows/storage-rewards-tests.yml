name: "0Chain Blobber Storage Rewards Tests"

on:
  workflow_dispatch:
    inputs:
      zbox_cli_branch:
        description: '0Box CLI (branch or commit SHA) which the tests will use'
        default: 'staging'
        required: true
      zwallet_cli_branch:
        description: '0Wallet CLI (branch or commit SHA) which the tests will use'
        default: 'staging'
        required: true
      existing_network:
        description: '(OPTIONAL): *EXISTING NETWORK* to run system tests against *INSTEAD OF* deploying a new network. [example: dev.0chain.net]'
        default: ''
        required: false
      miner_image:
        description: 'miner DOCKER IMAGE to deploy'
        default: 'staging'
        required: false
      sharder_image:
        description: 'sharder DOCKER IMAGE to deploy'
        default: 'staging'
        required: false
      blobber_image:
        description: 'blobber DOCKER IMAGE to deploy'
        default: 'staging'
        required: false
      validator_image:
        description: 'validator DOCKER IMAGE to deploy'
        default: 'staging'
        required: false
      zbox_image:
        description: '0box DOCKER IMAGE to deploy'
        default: 'staging'
        required: false
      zblock_image:
        description: '0block DOCKER IMAGE to deploy'
        default: 'staging'
        required: false
      test_file_filter:
        description: 'Comma separated list of test files to run (eg. zwalletcli_register_wallet_test.go, zwalletcli_send_and_balance_test.go). If supplied, the PR will NOT be notified of the test result'
        default: ''
        required: false

jobs:      
  blobber-storage-rewards-tests:
    name: "Blobber Storage Rewards Tests"
    runs-on: [ tests-suite ]
    timeout-minutes: 120
    steps:
      - name: "Config: Run tests against existing 0Chain network"
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.existing_network != ''
        run: |
          echo "NETWORK_URL=$(echo ${{ github.event.inputs.existing_network }})" >> $GITHUB_ENV
          echo "ZBOX_BRANCH=$(echo ${{github.event.inputs.zbox_cli_branch}})" >> $GITHUB_ENV
          echo "ZWALLET_BRANCH=$(echo ${{github.event.inputs.zwallet_cli_branch}})" >> $GITHUB_ENV

          echo "TEST_FILE_FILTER=$(echo $(([ -z '${{github.event.inputs.test_file_filter}}' ] && echo '') || echo '${{github.event.inputs.test_file_filter}}'))" >> $GITHUB_ENV

      - name: "Config: Deploy new 0Chain network then run tests against it"
        if: github.event_name == 'push' || github.event.inputs.existing_network == ''
        run: |
          echo "NETWORK_URL=$(echo dev-${RUNNER_NAME:(-1)}.devnet-0chain.net)" >> $GITHUB_ENV
          echo "ZBOX_BRANCH=$(echo $(([ -z '${{github.event.inputs.zbox_cli_branch}}' ] && echo 'staging') || echo '${{github.event.inputs.zbox_cli_branch}}'))" >> $GITHUB_ENV
          echo "ZWALLET_BRANCH=$(echo $(([ -z '${{github.event.inputs.zwallet_cli_branch}}' ] && echo 'staging') || echo '${{github.event.inputs.zwallet_cli_branch}}'))" >> $GITHUB_ENV

          echo "MINER_TAG=$(echo $(([ -z '${{github.event.inputs.miner_image}}' ] && echo 'staging') || echo '${{github.event.inputs.miner_image}}'))" >> $GITHUB_ENV
          echo "SHARDER_TAG=$(echo $(([ -z '${{github.event.inputs.sharder_image}}' ] && echo 'staging') || echo '${{github.event.inputs.sharder_image}}'))" >> $GITHUB_ENV
          echo "BLOBBER_TAG=$(echo $(([ -z '${{github.event.inputs.blobber_image}}' ] && echo 'staging') || echo '${{github.event.inputs.blobber_image}}'))" >> $GITHUB_ENV
          echo "VALIDATOR_TAG=$(echo $(([ -z '${{github.event.inputs.validator_image}}' ] && echo 'staging') || echo '${{github.event.inputs.validator_image}}'))" >> $GITHUB_ENV
          echo "ZBOX_TAG=$(echo $(([ -z '${{github.event.inputs.zbox_image}}' ] && echo 'staging') || echo '${{github.event.inputs.zbox_image}}'))" >> $GITHUB_ENV
          echo "ZBLOCK_TAG=$(echo $(([ -z '${{github.event.inputs.zblock_image}}' ] && echo 'staging') || echo '${{github.event.inputs.zblock_image}}'))" >> $GITHUB_ENV
          echo "ZDNS_TAG=$(echo $(([ -z '${{github.event.inputs.zdns_image}}' ] && echo 'staging') || echo '${{github.event.inputs.zdns_image}}'))" >> $GITHUB_ENV
          echo "EXPLORER_TAG=$(echo $(([ -z '${{github.event.inputs.explorer_image}}' ] && echo 'latest') || echo '${{github.event.inputs.explorer_image}}'))" >> $GITHUB_ENV

          echo "RUNNER_NUMBER=${RUNNER_NAME:(-1)}" >> $GITHUB_ENV
          echo "TEST_FILE_FILTER=$(echo $(([ -z '${{github.event.inputs.test_file_filter}}' ] && echo '') || echo '${{github.event.inputs.test_file_filter}}'))" >> $GITHUB_ENV

      - name: "Deploy 0Chain"
        if: github.event_name == 'push' || github.event.inputs.existing_network == ''
        uses: 0chain/actions/deploy-0chain-blobber-storage-rewards@blobber-storage-rewards
        with:
          kube_config: ${{ secrets[format('DEV{0}KC', env.RUNNER_NUMBER)] }}
          teardown_condition: "TESTS_PASSED"
          miner_image: ${{ env.MINER_TAG }}
          sharder_image: ${{ env.SHARDER_TAG }}
          blobber_image: ${{ env.BLOBBER_TAG }}
          validator_image: ${{ env.VALIDATOR_TAG }}
          zbox_image: ${{ env.ZBOX_TAG }}
          zblock_image: ${{ env.ZBLOCK_TAG }}
          zdns_image: ${{ env.ZDNS_TAG }}
          explorer_image: staging
          zsearch_image: staging
          zbox_cli_branch: ${{ env.ZBOX_BRANCH }}
          zwallet_cli_branch: ${{ env.ZWALLET_BRANCH }}

      - name: "Run System tests"
        uses: 0chain/actions/run-blobber-storage-rewards@blobber-storage-rewards
        with:
          network: ${{ env.NETWORK_URL }}
          zbox_cli_branch: ${{ env.ZBOX_BRANCH }}
          zwallet_cli_branch: ${{ env.ZWALLET_BRANCH }}
          svc_account_secret: ${{ secrets.SVC_ACCOUNT_SECRET }}
          deploy_report_page: true
          archive_results: true
          run_flaky_tests: true
          test_file_filter: ${{ env.TEST_FILE_FILTER }}
