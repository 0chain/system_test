name: "0Chain System Tests"
description: "Run 0Chain System Tests"
inputs:
  system_tests_branch:
    required: false
    description: 'System tests branch to run'
  network:
    required: true
    description: 'Network to run system tests against INSTEAD OF DEPLOYING A NEW NETWORK. [example: dev.0chain.net]'
  zbox_cli_branch:
    required: true
    description: '0Box CLI (branch or commit SHA) which the tests will use'
    default: 'staging'
  zwallet_cli_branch:
    required: true
    description: '0Wallet CLI (branch or commit SHA) which the tests will use'
    default: 'staging'
  smart_contract_owner_wallet_json:
    required: true
    description: 'smart contract owner wallet, used in smart contract config tests'
  deploy_report_page:
    required: true
    default: true
    description: ''
  archive_results:
    required: true
    default: true
    description: ''
  run_flaky_tests:
    required: true
    default: true
    description: ''
  svc_account_secret:
    required: false
    description: 'secret used to publish test results - will use your own credentials if not supplied'

runs:
  using: "composite"
  steps:
    - name: "Config: Run tests against 0Chain network"
      shell: 'script --return --quiet --command "bash {0}"'
      run: |
        echo "SYSTEM_TESTS_BRANCH=$(echo $(([ -z '${{inputs.system_tests_branch}}' ] && echo  ${GITHUB_REF#refs/*/}) || echo '${{inputs.system_tests_branch}}'))" >> $GITHUB_ENV
        echo "NETWORK_URL=$(echo ${{ inputs.network }})" >> $GITHUB_ENV
        echo "ZBOX_BRANCH=$(echo ${{inputs.zbox_cli_branch}})" >> $GITHUB_ENV
        echo "ZWALLET_BRANCH=$(echo ${{inputs.zwallet_cli_branch}})" >> $GITHUB_ENV

    - name: "VIEW TEST CONFIGURATION"
      shell: 'script --return --quiet --command "bash {0}"'
      run: |
        echo
        echo "======================================================"
        echo "RUNNING SYSTEM TESTS WITH THE FOLLOWING CONFIGURATION:"
        echo "======================================================"
        echo
        echo "System tests branch:    [${{ env.SYSTEM_TESTS_BRANCH }}]"
        echo "0Chain network URL:     [${{ env.NETWORK_URL }}]"
        echo "0box CLI branch:        [${{ env.ZBOX_BRANCH }}]"
        echo "0wallet CLI branch:     [${{ env.ZWALLET_BRANCH }}]"

    - name: "Checkout System Tests"
      uses: actions/checkout@v2
      with:
        repository: "0chain/system_test"
        ref: ${{ env.SYSTEM_TESTS_BRANCH }}


    - name: "Get CLI Cache Key"
      shell: 'script --return --quiet --command "bash {0}"'
      run: |
        if [[ '${{ env.ZWALLET_BRANCH }}' =~ ^[a-f0-9]{40}$ ]];
          then
            echo ZWALLET_SHA=${{ env.ZWALLET_BRANCH }} >> $GITHUB_ENV
          else
           echo ZWALLET_SHA=$(curl --silent --fail https://api.github.com/repos/0chain/zwalletcli/git/refs/heads/${{ env.ZWALLET_BRANCH }} | jq --raw-output .object.sha) >> $GITHUB_ENV
        fi

        if [[ '${{ env.ZBOX_BRANCH }}' =~ ^[a-f0-9]{40}$ ]];
          then
            echo ZBOX_SHA=${{ env.ZBOX_BRANCH }} >> $GITHUB_ENV
          else
           echo ZBOX_SHA=$(curl --silent --fail https://api.github.com/repos/0chain/zboxcli/git/refs/heads/${{ env.ZBOX_BRANCH }} | jq --raw-output .object.sha) >> $GITHUB_ENV
        fi

    - name: "Cache CLI Binaries"
      id: cli-cache
      uses: actions/cache@v2
      with:
        path: |
          tests/cli_tests/zbox
          tests/cli_tests/zwallet
        key: cli-cache-${{ runner.os }}-${{ env.ZWALLET_SHA }}-${{ env.ZBOX_SHA }}-v3

    - name: "Checkout 0wallet CLI"
      if: steps.cli-cache.outputs.cache-hit != 'true'
      uses: actions/checkout@v2
      with:
        ref: ${{ env.ZWALLET_BRANCH }}
        repository: 0chain/zwalletcli
        fetch-depth: 1
        path: ./zwalletcli

    - name: "Checkout 0box CLI"
      if: steps.cli-cache.outputs.cache-hit != 'true'
      uses: actions/checkout@v2
      with:
        ref: ${{ env.ZBOX_BRANCH }}
        repository: 0chain/zboxcli
        fetch-depth: 1
        path: ./zboxcli

    - name: "Setup Go"
      uses: actions/setup-go@v2
      with:
        go-version: 1.16

    - name: "Build CLI Binaries"
      if: steps.cli-cache.outputs.cache-hit != 'true'
      shell: 'script --return --quiet --command "bash {0}"'
      run: |
        echo
        echo "======================================================"
        echo "BUILDING 0WALLET AND 0BOX CLI BINARIES:"
        echo "======================================================"
        echo
        cd zwalletcli
        make install
        mv zwallet ../tests/cli_tests
        cd ../zboxcli
        make install
        mv zbox ../tests/cli_tests

    - name: "Set up system tests"
      shell: 'script --return --quiet --command "bash {0}"'
      run: |
        echo
        echo "======================================================"
        echo "SETTING UP SYSTEM TESTS:"
        echo "======================================================"
        echo
        echo "BRANCH=$(echo ${GITHUB_REF#refs/heads/} | sed 's/\//_/g')" >> $GITHUB_ENV
        echo "TEST_TIME=$(date '+%Y-%m-%d_%H.%M.%S')" >> $GITHUB_ENV
        go get gotest.tools/gotestsum
        go get github.com/vakenbolt/go-test-report
        cd tests/cli_tests
        mkdir -p $(echo ${GITHUB_REF#refs/heads/} | sed 's/\//_/g')/${GITHUB_SHA}/flaky
        sed "s,block_worker:.*,block_worker: https://${{ env.NETWORK_URL }}/dns," -i ./config/zbox_config.yaml
        ATTEMPT_BROKEN_TESTS_FLAG=''
        printf '#!/bin/bash\nset -o pipefail\nCONFIG_PATH=./zbox_config.yaml go test -timeout=30m -run  "^Test[^___]*$" ./... -json -count=1 -timeout=30m | sed -r "/(=== (CONT|RUN|PAUSE).*)|(--- FAIL:.*)|(\\"Test\\":\\".*\/[pP]arallel\\")/d"' > TEST_RUNNER_COMMAND.sh && chmod 777 TEST_RUNNER_COMMAND.sh
        printf '#!/bin/bash\nset -o pipefail\nCONFIG_PATH=./zbox_config.yaml go test -timeout=30m -run  "^Test___Flaky.*$" ./... '$ATTEMPT_BROKEN_TESTS_FLAG' -json -count=1 -timeout=30m | sed -r "/(=== (CONT|RUN|PAUSE).*)|(--- FAIL:.*)|(\\"Test\\":\\".*\/[pP]arallel\\")/d"' > FLAKY_TEST_RUNNER_COMMAND.sh && chmod 777 FLAKY_TEST_RUNNER_COMMAND.sh
        (./zwallet version --configDir ./config --config ./zbox_config.yaml --wallet ../ignore --silent | grep -A2 'Version info' | sed "s/Version info:/ZWallet Version Info:/") || true
        (./zbox version --configDir ./config --config ./zbox_config.yaml --wallet ../ignore --silent | grep -A2 'Version info' | sed "s/Version info:/ZBox Version Info:/") || true

    - name: "Run CLI System Tests"
      shell: 'script --return --quiet --command "bash {0}"'
      env:
        SMART_CONTRACT_OWNER_WALLET_JSON: ${{ inputs.smart_contract_owner_wallet_json }}
      run: |
        echo
        echo "======================================================"
        echo "RUNNING SYSTEM TESTS:"
        echo "======================================================"
        echo
        cd tests/cli_tests
        exit_code=0
        echo "$SMART_CONTRACT_OWNER_WALLET_JSON" >> ./config/sc_owner_wallet.json
        ~/go/bin/gotestsum --jsonfile test-output.json --hide-summary=output --format testname --raw-command -- ./TEST_RUNNER_COMMAND.sh || exit_code=$?
        cat test-output.json | ~/go/bin/go-test-report --groupSize 1 --output ${{ env.BRANCH }}/${GITHUB_SHA}/index.html --title "0Chain System test suite [${{ env.BRANCH }}/${GITHUB_SHA:0:8}] ran against [${{ env.NETWORK_URL }}] at [${{ env.TEST_TIME }}]"
        rm -rf ./config/sc_owner_wallet.json || true
        cp -R ./${{ env.BRANCH }}/${GITHUB_SHA} ./${{ env.BRANCH }}/latest
        echo "TESTS_RAN=true" >> $GITHUB_ENV

        if [[ $exit_code == 0 ]];
          then
            echo TESTS_PASSED=true >> $GITHUB_ENV
          else
            echo TESTS_PASSED=false >> $GITHUB_ENV
        fi

        exit $exit_code

    - name: "Archive CLI Config & Console Output"
      if: ${{ always() && env.TESTS_RAN == 'true' && inputs.archive_results == 'true' }}
      uses: actions/upload-artifact@v2
      with:
        name: System-Test-${{ env.TEST_TIME }}
        path: |
          ./tests/cli_tests/config
          ./tests/cli_tests/cmdlog.log
          ./tests/cli_tests/${{ env.BRANCH }}/latest/index.html

    - name: "Run Flaky CLI System Tests"
      if:  ${{ always() && inputs.run_flaky_tests == 'true' }}
      shell: 'script --return --quiet --command "bash {0}"'
      run: |
        echo
        echo "======================================================"
        echo "RUNNING FLAKY SYSTEM TESTS:"
        echo "======================================================"
        echo
        cd tests/cli_tests
        rm -rf cmdlog.log || true
        rm -rf test-output.json || true
        ~/go/bin/gotestsum --jsonfile test-output.json --hide-summary=output --format testname --raw-command -- ./FLAKY_TEST_RUNNER_COMMAND.sh || true
        cat test-output.json | ~/go/bin/go-test-report --groupSize 1 --output ${{ env.BRANCH }}/${GITHUB_SHA}/flaky/index.html --title "0Chain Flaky system test suite [${{ env.BRANCH }}/${GITHUB_SHA:0:8}] ran against [${{ env.NETWORK_URL }}] at [${{ env.TEST_TIME }}]"
        cp -R ./${{ env.BRANCH }}/${GITHUB_SHA}/flaky ./${{ env.BRANCH }}/latest/flaky

    - name: "Archive Flaky Test CLI Config & Console Output"
      if: ${{ always() && env.TESTS_RAN == 'true' && inputs.run_flaky_tests == 'true' && inputs.archive_results  == 'true'}}
      uses: actions/upload-artifact@v2
      with:
        name: Flaky-System-Test-${{ env.TEST_TIME }}
        path: |
          ./tests/cli_tests/config
          ./tests/cli_tests/cmdlog.log
          ./tests/cli_tests/${{ env.BRANCH }}/latest/flaky/index.html

    - name: "Deploy report pages"
      if: ${{ always() && env.TESTS_RAN == 'true' && inputs.deploy_report_page == 'true' }}
      uses: peaceiris/actions-gh-pages@v3
      with:
        publish_branch: test_reports
        keep_files: true
        github_token: "${{ inputs.svc_account_secret }}"
        publish_dir: "./tests/cli_tests/${{ env.BRANCH }}"
        destination_dir: "./${{ env.BRANCH }}"
        user_name: "github-actions[bot]"
        user_email: "github-actions[bot]@users.noreply.github.com"

    - name: "Wait for report deployment to complete"
      if: ${{ always() && env.TESTS_RAN == 'true' && inputs.deploy_report_page == 'true' }}
      shell: 'script --return --quiet --command "bash {0}"'
      run: counter=0; while [ $counter -lt 5 ] && curl -o /dev/null -Isw '%{http_code}\n' "https://0chain.github.io/system_test/${{ env.BRANCH }}/${GITHUB_SHA}/index.html?t=$(date +%s)" | grep -v 200 > /dev/null; do sleep 10 && echo "Waiting for report page to deploy..." && ((counter=counter+1)); done

    - name: "Report Links"
      if: ${{ always() && env.TESTS_RAN == 'true' && inputs.deploy_report_page == 'true' }}
      shell: 'script --return --quiet --command "bash {0}"'
      run: |
        echo
        echo "======================================================"
        echo "SYSTEM TESTS HTML REPORTS:"
        echo "======================================================"
        echo
        echo "System tests report:"
        echo "https://0chain.github.io/system_test/${{ env.BRANCH }}/${GITHUB_SHA}/index.html"
        echo "Flaky system tests report:"
        echo "https://0chain.github.io/system_test/${{ env.BRANCH }}/${GITHUB_SHA}/flaky/index.html"